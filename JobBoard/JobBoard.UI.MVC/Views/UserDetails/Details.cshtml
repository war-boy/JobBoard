@using Microsoft.AspNet.Identity;
@using JobBoard.DATA.EF;
@model JobBoard.DATA.EF.UserDetail

@{
    ViewBag.Title = "Details";
}

<!--Employee Details-->
<div class="card col-md-6 employeeDetails">
    @if (Model.UserImage != null)
    {
        <img class="card-img-top" src="~/Content/employeeImages/@Model.UserImage" alt="@Model.FullName">
    }
    else
    {
        <img class="card-img-top" src="~/Content/employeeImages/no-user-img.png" alt="No user image">

    }

    <div class="card-body">
        <h5 class="card-title">@Html.DisplayFor(model => model.FullName)</h5>
        <p class="card-text">@Html.DisplayFor(model => model.Title)<br />@Html.DisplayFor(model => model.Location.FullLocation)</p>
        <p class="card-text"></p>
    </div>
    <ul class="list-group list-group-flush">
        <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.DateOfHire):</b><br /> @Html.DisplayFor(model => model.DateOfHire)</li>
        <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.AspNetUser.Email):</b><br /> @Html.DisplayFor(model => model.AspNetUser.Email)</li>
        <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.AspNetUser.PhoneNumber):</b><br /> @Html.DisplayFor(model => model.AspNetUser.PhoneNumber)</li>
    </ul>

    @if (Model.IsOpenToNewOpps == true)
    {
        <ul class="list-group list-group-flush">
            <li class="list-group-item openOpps">Open to new Opportunities</li>
            <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.EmploymentType):</b><br /> @Html.DisplayFor(model => model.EmploymentType)</li>
            <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.IsOpenToRelocation):</b><br /> @(Model.IsOpenToRelocation ? "Yes" : "No")</li>
            <li class="list-group-item"><b>@Html.DisplayNameFor(model => model.VisaStatus):</b><br /> @Html.DisplayFor(model => model.VisaStatus)</li>
        </ul>
    }

    <div class="card-body">
        <!-- #region Get current user -->
        @{
            JobBoardEntities db = new JobBoardEntities();

            string userID = User.Identity.GetUserId();

            UserDetail currentUser = db.UserDetails.Where(ud => ud.UserId == userID).FirstOrDefault();
        }
        <!-- #endregion -->

        @if ((Request.IsAuthenticated && Model.UserId == currentUser.UserId) || (Request.IsAuthenticated && User.IsInRole("Admin")))
        {
            @Html.ActionLink("Edit Information", "Edit", new { id = Model.UserId });
        }

        <!--If this ISN'T the Details View for the current user's details AND the user you are attempting to has a valid email, give them the option to contact-->
        @if ((Model.UserId != currentUser.UserId) && (Model.AspNetUser.Email != null))
        {
            <a href="@Url.Action("Contact", "Home", new { senderId = currentUser.UserId, receiverId = Model.UserId})" class="card-link">Contact</a>
        }

    </div>
</div>

<!--Resume-->
@if (Model.ResumeFileName == null)
{
    if (Model.UserId == currentUser.UserId)
    {
        using (Html.BeginForm("AddResume", "UserDetails", new { userViewId = Model.UserId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="col-md-9">
                <div class="card resume-card">
                    <div class="card-body">
                        <h2>You Currently do not have a Resume on File. Click Below to Upload your .pdf File.</h2>
                        <input type="file" name="resume" />
                        <input type="submit" value="Upload Resume" class="btn btn-primary" />
                        <h5 style="color: red; padding-top: inherit;">@ViewBag.Message</h5>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-md-9">
            <div class="card resume-card">
                <div class="card-body">
                    <h2>@Model.FirstName does not have and Resume on file.</h2>
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="col-md-9 right-card">
        <iframe src="~/Content/resumes/@Model.ResumeFileName" width="810" height="900" scrolling="no" frameborder="0"></iframe>

        @if (Model.UserId == currentUser.UserId || User.IsInRole("Admin"))
        {
            <div class="form-group row">
                <div class="col-md-12 form-btns">
                    <a href="@Url.Action("DeleteResume", "UserDetails", new { userViewId = Model.UserId })" class="btn btn-danger">Delete</a>
                </div>
            </div>
        }
    </div>


}


@model JobBoard.DATA.EF.OpenPosition

@{
    ViewBag.Title = "Create Posting";
}

@section head{
    <section class="breadcrumbs">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <h2>@ViewBag.Title</h2>
            </div>
        </div>
    </section>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.Hidden("IsActive", true)

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.PositionId, htmlAttributes: new { @class = "control-label col-md-3" })

            @Html.DropDownList("PositionId", null, htmlAttributes: new { @class = "form-control form-control-lg" })
            @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
            <a href="@Url.Action("Create", "Positions")">Don't see it? Click here to add your opening.</a>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-3" })

            @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control form-control-lg" })
            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })

        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.IsRemote, htmlAttributes: new { @class = "control-label col-md-3" })

            @Html.DropDownListFor(model => model.IsRemote,
           new SelectList(new[] { new { Value = "true", Text = "Yes" }, new { Value = "false", Text = "No" }, }, "Value", "Text", Model), new { @class = "form-control form-control-lg" })
            @Html.ValidationMessageFor(model => model.IsRemote, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.EmploymentType, htmlAttributes: new { @class = "control-label col-md-6" })

            @Html.DropDownListFor(model => model.EmploymentType,
           new SelectList(new[] { new { Value = "Contract", Text = "Contract" }, new { Value = "Contract to Hire", Text = "Contract to Hire" }, new { Value = "Direct Hire", Text = "Direct Hire" } }, "Value", "Text", Model), new { @class = "form-control form-control-lg" })

            @Html.ValidationMessageFor(model => model.EmploymentType, "", new { @class = "text-danger" })

        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="row">
        <div class="col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>

}
    <div style="padding-bottom: 27em;"></div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
